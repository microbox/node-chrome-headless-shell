sudo: required

services:
  - docker

notifications:
  email:
    on_success: never
    on_failure: change

before_install:
  - export NODE_VERSION=$(wget -qO- https://nodejs.org/dist/latest-v8.x/ | sed -nE 's|.*>node-v(.*)\.pkg</a>.*|\1|p')
  - echo $NODE_VERSION

install:
  - wget https://nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz -O debian/node-v${NODE_VERSION}-linux-x64.tar.gz
  - cd debian && tar -zxvf node-v${NODE_VERSION}-linux-x64.tar.gz && mv node-v${NODE_VERSION}-linux-x64 node-linux-x64 && cd ..

script:
  - docker build -t node-headless-debian-build debian-build
  - export CID=$(docker create node-headless-debian-build)
  - mkdir -p debian/lib/x86_64-linux-gnu/ debian/usr/lib/x86_64-linux-gnu/
  - docker cp $CID:/chrome.tar debian
  - docker cp $CID:/nss.tar debian
  - docker cp $CID:/lib/x86_64-linux-gnu/libexpat.so.1.6.0 debian/lib/x86_64-linux-gnu/libexpat.so.1
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libnss3.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libnssutil3.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libsmime3.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libnspr4.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libplc4.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libplds4.so debian/usr/lib/x86_64-linux-gnu
  - docker cp $CID:/usr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6 debian/usr/lib/x86_64-linux-gnu/libsqlite3.so.0

after_success:
  - export REPO=$TRAVIS_REPO_SLUG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - docker build -t $REPO:$TAG --build-arg NODE_VERSION=$NODE_VERSION debian
  - docker images
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  - docker push $REPO

